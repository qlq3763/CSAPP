/* Following the bit-level floating-point coding rules, implement the function with */
/* the following prototype: */
/* /\* */
/* * Compute (int) f. */
/* * If conversion causes overflow or f is NaN, return 0x80000000 */
/* *\/ */
/* int float_f2i(float_bits f); */
/* For floating-point number f , this function computes (int) f . Your function */
/* should round toward zero. If f cannot be represented as an integer (e.g., it is */
/* out of range, or it is NaN), then the function should return 0x80000000. */
/* Test your function by evaluating it for all 232 values of argument f and com- */
/* paring the result to what would be obtained using your machineâ€™s floating-point */
/* operations. */


/* Compute (int) f.
* If conversion causes overflow or f is NaN, return 0x80000000
*/
int float_f2i(float_bits f);
